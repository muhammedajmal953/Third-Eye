<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <title>Nest Dashboard</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <meta name="description" content="" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta property="og:title" content="" />
    <meta property="og:type" content="" />
    <meta property="og:url" content="" />
    <meta property="og:image" content="" />
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="/imgs/theme/favicon.svg" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.min.css" rel="stylesheet">
    <!-- Template CSS -->
    <link href="/css/main.css?v=1.1" rel="stylesheet" type="text/css" />
</head>

<style>
    .imageContainerItem {
        position: relative;
        display: inline-block;
        margin-right: 10px;
    }

    .deleteButton {
        position: absolute;
        top: 5px;
        right: 5px;
        background-color: red;
        border: none;
        border-radius: 50%;
        width: 20px;
        height: 20px;
        color: white;
        cursor: pointer;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1;
    }

    .deleteButton:hover {
        background-color: darkred;
    }
</style>

<body>
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            <a href="" class="brand-wrap">
                <h1 class="h1">Third Eye</h1>
            </a>
            <div>
                <button class="btn btn-icon btn-aside-minimize"><i
                        class="text-muted material-icons md-menu_open"></i></button>
            </div>
        </div>
    </aside>
    <main>
        <section class="content-main mt-80 mb-80">
            <div class="card mx-auto card-login">
                <div class="card-body">
                    <h4 class="card-title mb-4">Add Products</h4>
                    <form enctype="multipart/form-data" onsubmit="validateProd(event)" accept="image" id="addProduct">
                        <div class="mb-3">
                            <input class="form-control" placeholder="Product Name" id="productName" type="text"
                                name="productName">
                        </div>
                        <!-- form-group// -->
                        <div class="mb-3">

                            <textarea class="form-control" name="description" cols="30" rows="5" id="discription"
                                placeholder="discription"></textarea>
                        </div>

                        <div class="mb-3">
                            <input class="form-control" placeholder="Price" id="price" type="number" name="price"
                                required>
                        </div>
                        <div class="mb-3">
                            <input class="form-control" placeholder="quantity" id="quantity" type="number"
                                name="quantity" required>
                        </div>
                        <select class="form-control mb-2 dropdown has-submenu" name="catagory" required>
                            <option value="">catagory</option>
                            <%for(i=0;i<catagory.length;i++){%>
                                <% if (catagory[i].isActive===true) { %>
                                    <option>
                                        <%=catagory[i].catagoryName%>
                                    </option>
                                    <% } %>
                                        <%}%>
                        </select>
                        <div class="mb-3">
                            <div id="imageContainer"></div>
                            <input class="form-control" onchange="viewImages(),handleImageSelect(event)"
                                placeholder="Select image" type="file" name="images" id="images" multiple required>
                        </div>

                        <div class="mb-4">
                            <button type="submit" class="btn btn-primary w-100">Add Product</button>
                        </div>
                        <!-- form-group// -->
                    </form>

                </div>
            </div>
        </section>

    </main>
    <script src="/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/js/vendors/jquery.fullscreen.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.min.js"></script>


    <!-- Main Script -->
    <script src="/js/main.js?v=1.1" type="text/javascript"></script>
    <script>
        let selectedFiles = [];

        function viewImages() {
            let inputFiles = document.getElementById('images').files;
            let imageContainer = document.getElementById('imageContainer');

            // Clear previous previews
            imageContainer.innerHTML = '';

            for (let i = 0; i < inputFiles.length; i++) {
                const img = document.createElement('img');
                img.className = "ImagePreview";
                img.style.height = '100px';
                img.style.width = '100px';
                img.src = URL.createObjectURL(inputFiles[i]);

                const deleteButton = document.createElement('button');
                deleteButton.innerHTML = '&times;'; // Use 'x' as delete button
                deleteButton.className = 'deleteButton'; // Add a class for styling
                deleteButton.addEventListener('click', function () {
                    img.remove();
                    deleteButton.remove();

                    selectedFiles = selectedFiles.filter(file => file !== inputFiles[i]);
                });

                const containerDiv = document.createElement('div');
                containerDiv.className = 'imageContainerItem'; // Add a class for styling
                containerDiv.appendChild(img);
                containerDiv.appendChild(deleteButton);

                imageContainer.appendChild(containerDiv);

                // Add the file to the selected files array
                selectedFiles.push(inputFiles[i]);
            }
        }
        async function validateProd(event) {
            event.preventDefault();
            const trimmedName = document.getElementById('productName').value.trim();
            const trimmedDescription = document.getElementById('discription').value.trim();
            const price = parseFloat(document.getElementById('price').value);
            const quantity = parseInt(document.getElementById('quantity').value);
            const fileInput = document.getElementById('images')

            const fileList = new DataTransfer();
            for (let i = 0; i < selectedFiles.length; i++) {
                fileList.items.add(selectedFiles[i]);
            }
            fileInput.files = fileList.files;



            if (trimmedName.length === 0 || trimmedDescription.length === 0 || price < 0 || quantity < 0) {
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: 'The fields should not be empty and should not contain negative values.',

                });
                return
            }
            for (i = 0; i < fileInput.length; i++) {
                let fileType = fileInput[i].type
                if (!fileType.startsWith('image/')) {

                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: 'Select Only Image files',

                    });
                    return
                }
                
            }

            const form = document.getElementById('addProduct');
            const formData = new FormData(form);

           
            const response = await axios.post(`/admin/add-product`, formData)

            if (response.data === 'reduce images') {
                Swal.fire({
                    icon: "error",
                    title: "Reduce images to 5",
                });
            }
            if (response.data==='NoImages') {
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: 'Select at least one image',
                    });
                }

            if (response.data === 'success') {
                Swal.fire({
                    icon: "success",
                    title: "Product Added",
                });
                setTimeout(() => {
                    window.location.href = '/admin/products'
                }, 1000);

            }


        }

    </script>
</body>

</html>